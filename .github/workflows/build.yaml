# yaml-language-server: $schema=https://json.schemastore.org/github-workflow
name: Build
on: [push, pull_request]

jobs:
  build-dev-image:
    name: Build and push dev image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Log into ghcr.io
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push image
        run: |
          export DOCKER_BUILDKIT=1
          REPO=ghcr.io/${{ github.repository }}-dev
          REF=${{ github.ref }}
          BRANCH=`echo ${REF#refs/heads/} | tr '/' '-'`
          COMMAND="docker build -f Dockerfile.dev --build-arg BUILDKIT_INLINE_CACHE=1 --cache-from $REPO --cache-from $REPO:$BRANCH -t $REPO:${{ github.sha }} -t $REPO:$BRANCH"
          if [ ${{ github.ref }} == refs/heads/dev ]; then
            COMMAND+=" -t $REPO:latest"
          fi
          COMMAND+=" ."
          eval $COMMAND
          docker push -a $REPO
  test:
    name: Run tests
    runs-on: ubuntu-latest
    needs: build-dev-image
    if: success()
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - name: Checkout commit
        uses: actions/checkout@v2
      - name: Create DB
        run: >
          psql
          postgres://postgres:postgres@localhost:5432/postgres
          -c "create database shamichan;"
      - name: Build dev image
        run: >
          DOCKER_BUILDKIT=1 docker build
          --cache-from bakape/shamichan-dev
          -t shamichan
          -f Dockerfile.dev
          .
      - name: Run Rust tests
        run: >
          docker run
          --rm
          --network host
          -e CI=true
          -e TEST_DB="postgres://postgres:postgres@localhost:5432/shamichan"
          --entrypoint=""
          shamichan
          cargo test
      # TODO: move to imager workflow
      # - name: Run Go tests
      #   run: >
      #     docker run \
      #       --rm \
      #       --network host \
      #       -e CI=true \
      #       -e TEST_DB="postgres://postgres:postgres@localhost:5432/shamichan" \
      #       --entrypoint="" \
      #       shamichan \
      #       go test --race ./..
  build-prod-image:
    name: Build and push prod image
    runs-on: ubuntu-latest
    needs:
      - build-dev-image
      - test
    if: success() && github.ref == 'refs/heads/master'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Log into ghcr.io
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push image
        run: |
          export DOCKER_BUILDKIT=1
          REPO=ghcr.io/${{ github.repository }}
          REPO_DEV=${REPO}-dev
          REF=${{ github.ref }}
          BRANCH=`echo ${REF#refs/heads/} | tr '/' '-'`
          COMMAND="docker build --build-arg BUILDKIT_INLINE_CACHE=1 --cache-from $REPO --cache-from $REPO:$BRANCH --cache-from $REPO_DEV --cache-from $REPO_DEV:$BRANCH -t $REPO:${{ github.sha }} -t $REPO:$BRANCH"
          if [ ${{ github.ref }} == refs/heads/dev ]; then
            COMMAND+=" -t $REPO:latest"
          fi
          COMMAND+=" ."
          eval $COMMAND
          docker push -a $REPO
