name: Build
on: [push, pull_request]

# TODO: restore server image building

jobs:
  build-dev-image:
    name: Build and push dev image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Prepare
        id: prep
        run: |
          DOCKER_IMAGE=bakape/meguca-dev
          VERSION=edge
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
          elif [[ $GITHUB_REF == refs/heads/* ]]; then
            VERSION=$(echo ${GITHUB_REF#refs/heads/} | sed -r 's#/+#-#g')
          elif [[ $GITHUB_REF == refs/pull/* ]]; then
            VERSION=pr-${{ github.event.number }}
          fi
          TAGS="${DOCKER_IMAGE}:${VERSION}"
          if [ "${{ github.event_name }}" = "push" ]; then
            TAGS="$TAGS,${DOCKER_IMAGE}:sha-${GITHUB_SHA::8}"
          fi
          echo ::set-output name=version::${VERSION}
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push image
        uses: docker/build-push-action@v2
        with:
          context: .
          pull: true
          push: ${{ github.event_name != 'pull_request' }}
          repository: bakape/meguca-dev
          cache-from: type=registry,ref=bakape/meguca-dev:latest
          cache-to: type=inline
          tags: ${{ steps.prep.outputs.tags }}
          file: Dockerfile.dev
          labels: |
            org.opencontainers.image.source=${{ github.event.repository.html_url }}
            org.opencontainers.image.created=${{ steps.prep.outputs.created }}
            org.opencontainers.image.revision=${{ github.sha }}
  test:
    name: Run tests
    runs-on: ubuntu-latest
    needs: build-dev-image
    if: success()
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - name: Checkout commit
        uses: actions/checkout@v2
      - name: Create DB
        run: |
          psql
          postgres://postgres:postgres@localhost:5432/postgres
          -c "create database meguca;"
      - name: Build dev image
        run: |
          DOCKER_BUILDKIT=1 docker build
          --cache-from bakape/meguca-dev
          -t meguca
          .
      - name: Run Rust tests
        run: |
          docker run
          --rm
          --network host
          -e CI=true
          -e TEST_DB="postgres://postgres:postgres@localhost:5432/meguca"
          --entrypoint=""
          meguca
          cargo test
      # TODO: move to imager workflow
      # - name: Run Go tests
      #   run: >
      #     docker run \
      #       --rm \
      #       --network host \
      #       -e CI=true \
      #       -e TEST_DB="postgres://postgres:postgres@localhost:5432/meguca" \
      #       --entrypoint="" \
      #       meguca \
      #       go test --race ./..
  # TODO: port
  # build-prod-image:
  #   name: Build and push prod image
  #   runs-on: ubuntu-latest
  #   needs:
  #     - build-dev-image
  #     - test
  #   if: success() && github.ref == 'refs/heads/master'
  #   steps:
  #     - name: Build and push image
  #       uses: docker/build-push-action@v1
  #       env:
  #         DOCKER_BUILDKIT: "1"
  #       with:
  #         username: ${{ secrets.DOCKER_USERNAME }}
  #         password: ${{ secrets.DOCKER_PASSWORD }}
  #         repository: bakape/meguca
  #         cache-from: type=registry,ref=bakape/meguca-dev:latest
  #         push: true
  #         tag_with_ref: true
  #         file: Dockerfile
